- name: set up nginx on proxy
  hosts: proxy
  become: yes
  tasks:
    - name: run apt update
      apt:
        update_cache: yes
        cache_valid_time: 3600
    - name: install nginx
      apt:
        name: nginx
        state: present
    - name: configure nginx
      copy:
        dest: /etc/nginx/nginx.conf
        content: |
           user www-data;
           worker_processes auto;
           pid /run/nginx.pid;
           error_log /var/log/nginx/error.log;
           include /etc/nginx/modules-enabled/*.conf;
           events {
            worker_connections 768;
            multi_accept on;
           }
           http {
           upstream backend {
            server 192.168.0.6;
            server 192.168.0.9;
            server 192.168.0.13;
           }
           server {
            location / {
             proxy_pass http://backend;
            }
           }
            include /etc/nginx/mime.types;
            default_type application/octet-stream;
            access_log /var/log/nginx/access.log;
            include /etc/nginx/conf.d/*.conf;
            include /etc/nginx/sites-enabled/*;
           }
    - name: erase nginx file
      copy:
        dest: /etc/nginx/sites-available/default
        content: ""
    - name: stop nginx
      service:
        name: nginx
        state: stopped
    - name: start nginx
      service:
        name: nginx
        state: started


- name: set up http python server on webservers
  hosts: webservers
  become: true
  tasks:
    - name: Create web root directory
      file:
        path: /opt/simple-web
        state: directory

    - name: Create test index.html
      copy:
        dest: /opt/simple-web/index.html
        content: "<h1>Web Server {{server_id}}</h1>"

    - name: start python http server
      shell: nohup python3 -m http.server 80 --directory /opt/simple-web &>/dev/null &
      args:
        executable: /bin/bash
      async: 0
      poll: 0

    - name: Allow port 80
      ufw:
        rule: allow
        port: '80'
        proto: tcp
      when: ansible_facts.os_family == 'Debian'


